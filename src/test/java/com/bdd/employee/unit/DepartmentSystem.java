package com.bdd.employee.unit;

import com.bdd.employee.departments.Department;
import com.bdd.employee.departments.DepartmentController;
import com.bdd.employee.departments.DepartmentRepository;
import org.junit.Assert;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.invocation.InvocationOnMock;
import org.mockito.stubbing.Answer;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import static org.mockito.ArgumentMatchers.any;

public class DepartmentSystem extends com.bdd.employee.facade.DepartmentSystem {
    @Mock
    private DepartmentRepository departmentRepository;

    private DepartmentController departmentController;

    private long autoGenerateId = 0;

    public DepartmentSystem() {
        departmentRepository = Mockito.mock(DepartmentRepository.class);
        Mockito.when(departmentRepository.save(any())).then(departmentAnswer);

        departmentController = new DepartmentController(departmentRepository);
    }

    @Override
    public Department createDepartment(Department department) {
        ResponseEntity<Department> response = departmentController.addDepartment(department);
        Assert.assertEquals(HttpStatus.CREATED, response.getStatusCode());

        return response.getBody();
    }

    @Override
    public Long getAutoGeneratedId() {
        return autoGenerateId;
    }

    Answer<Department> departmentAnswer = new Answer<Department>() {
        @Override
        public Department answer(InvocationOnMock invocationOnMock) throws Throwable {
            Department department = invocationOnMock.getArgument(0);
            Department newDepartment = new Department();
            autoGenerateId++;
            newDepartment.setDepartmentId(autoGenerateId);
            newDepartment.setDepartmentName(department.getDepartmentName());
            return newDepartment;
        }
    };
}

